
((digest . "87580d01e799ff57c8ff0f3a53455771") (undo-list nil ("
" . 522) ((marker* . 522) . 1) ((marker* . 522) . 1) ((marker) . -1) ((marker) . -1) ((marker . 523) . -1) ((marker) . -1) nil ("
" . 522) ((marker) . -1) ((marker) . -1) ((marker . 522) . -1) ((marker . 523) . -1) ((marker) . -1) (t 23300 4116 843422 655000) nil ("
var app = express();

var server = app.listen(3000, function(){
    console.log(\"Node.js is listening to PORT:\" + server.address().port);
});" . 171) ((marker . 171) . -142) ((marker . 171) . -1) ((marker . 171) . -23) ((marker) . -142) ((marker . 523) . -1) nil (314 . 663) nil (313 . 315) (t 23299 61667 668404 527000) nil ("var server = http.createServer();


server.on(\"request\",function(req, res){

	var Response = {
        \"renderHTML\": function () {
            var template = fs.readFile('./html/index.html', 'utf-8', function (err, data) {
                res.writeHead(200, {
                    'content-Type': 'text/html'
                });
                res.write(data);
            });
        }
	};

	var uri = url.parse(req.url).pathname;
	
	if (uri === \"/\") {
        Response[\"renderHTML\"](); 
        return;
    } else if (uri === \"/result\") {
		const credential = auth(req);
        // Response[\"resultGenerator\"]();
        return;
    };
});

server.listen(PORT,'127.0.0.1');

console.log('Server running :http://' + HOSTNAME + ':' + PORT + '/');
" . -454) ((marker . 661) . -75) ((marker . 661) . -75) ((marker . 661) . -75) ((marker . 661) . -75) ((marker . 661) . -543) ((marker . 661) . -75) ((marker . 661) . -581) ((marker . 661) . -543) ((marker . 661) . -433) ((marker) . -608) ((marker) . -747) ((marker . 661) . -540) ((marker) . -747) ((marker . 522) . -747) ((marker . 523) . -747) 1201 nil (194 . 314) nil (193 . 194) nil (172 . 193) nil (170 . 172) (t 23299 61642 498257 810000) nil (45 . 50) nil ("var" . 45) nil ("
" . -78) ((marker) . -1) ((marker . 522) . -1) 79 nil (45 . 79) nil (44 . 45) (t 23299 61485 924388 42000) nil ("
" . 707) ((marker . 523) . -1) (t 23299 60974 257190 379000) nil ("
" . -815) ((marker) . -1) ((marker . 171) . -1) ((marker . 522) . -1) 816 nil ("		console.log('hello');" . 816) ((marker . 171) . -2) (t 23299 60913 277103 376000) nil (831 . 836) ("'" . 832) (830 . 832) ("'" . -830) (830 . 831) ("'" . -830) (830 . 832) ("'" . -830) (830 . 831) nil ("uri" . -830) ((marker) . -3) 833 nil (818 . 835) nil (815 . 818) nil ("console.log(uri);" . 707) ((marker) . -17) ((marker) . -17) 724 (t 23299 60866 905042 229000) nil (721 . 722) nil ("k" . -721) ((marker) . -1) 722 nil (719 . 722) nil (apply yas--snippet-revive 707 721 [cl-struct-yas--snippet nil nil [cl-struct-yas--exit (719 marker) nil] 1 (overlay nil nil) nil nil nil]) (apply yas--take-care-of-redo 707 721 [cl-struct-yas--snippet nil nil [cl-struct-yas--exit (719 marker) nil] 1 (overlay nil nil) nil nil nil]) (707 . 721) ("log" . 707) ((marker) . -3) 710 nil (707 . 710) nil (705 . 707) (t 23299 60610 303207 565000) nil (844 . 845) (t 23299 54115 311592 101000) nil ("        " . 853) (853 . 864) 883 (t 23299 54077 308870 993000) nil ("
" . -349) ((marker) . -1) ((marker . 171) . -1) ((marker . 661) . -1) ((marker . 661) . -1) ((marker . 661) . -1) ((marker . 661) . -1) ((marker . 522) . -1) ("
" . -350) ((marker) . -1) ((marker . 171) . -1) ((marker . 661) . -1) ((marker . 522) . -1) ("	
	 if (!credential || credential.name !== name || credential.pass !== password) {
        res.writeHead(401,{'WWW-Authenticate':'Basic realm=\"secret zone\"'})
        res.end('Access denied')
    } else {
        res.end('Access granted')
    }" . -351) ((marker) . -244) ((marker . 661) . -3) ((marker) . -244) ((marker*) . 1) ((marker) . -244) ((marker*) . 41) ((marker) . -244) ((marker . 522) . -239) 595 (t 23299 54058 419354 6000) nil ("	" . -1062) 1060 nil (1062 . 1091) nil (1059 . 1062) nil ("	" . -350) ((marker) . -1) ((marker . 661) . -1) ((marker . 661) . -1) ((marker . 661) . -1) ("
" . -351) ((marker) . -1) ((marker . 661) . -1) ((marker . 661) . -1) ((marker . 522) . -1) 352 nil ("	const credential = auth(req)" . 352) ((marker . 661) . -1) ((marker . 661) . -1) (t 23299 54034 442807 27000) nil (71 . 73) nil ("-" . -71) ((marker) . -1) 72 nil (67 . 72) (t 23299 54008 64651 225000) nil (51 . 55) nil ("http" . -51) ((marker) . -4) 55 (t 23299 53998 825564 518000) nil (67 . 71) nil ("htt" . -67) ((marker) . -3) 70 nil ("p" . -70) ((marker) . -1) 71 nil (45 . 74) nil (44 . 45) (t 23299 53949 729363 707000) nil (345 . 347) nil (347 . 588) nil (345 . 347) nil ("    " . -317) 316 nil (314 . 315) nil (316 . 349) nil (315 . 316) ("	" . 314) (314 . 315) (314 . 315) nil (314 . 315) (t 23299 53167 314177 319000) nil ("-" . -878) 879 nil (878 . 879) (t 23299 51984 937769 692000) nil ("
お疲れ様です。
木曜日金曜日に作業を行いたいのでご連絡させていただきます。" . -948) 986 nil (985 . 986) ("。" . -985) (976 . 986) ("させていただきます" . -976) (976 . 985) ("させていただきます" . -976) (976 . 985) ("させていただきまｓ" . -976) (976 . 985) ("させていただきま" . -976) (976 . 984) ("させていただきｍ" . -976) (976 . 984) ("させていただき" . -976) 983 nil (976 . 983) ("させていただｋ" . -976) (976 . 983) ("させていただ" . -976) (976 . 982) ("させていたｄ" . -976) (976 . 982) ("させていた" . -976) (976 . 981) ("させていｔ" . -976) (976 . 981) ("させてい" . -976) (976 . 980) ("させて" . -976) (976 . 979) ("させｔ" . -976) (976 . 979) ("させ" . -976) (976 . 978) ("さｓ" . -976) (976 . 978) ("さ" . -976) (976 . 977) ("ｓ" . -976) (973 . 977) ("ご連絡" . -973) (973 . 976) ("ごれんらく" . -973) (973 . 978) ("ごれんらｋ" . -973) (973 . 978) ("ごれんら" . -973) (973 . 977) ("ごれんｒ" . -973) (973 . 977) ("ごれｎ" . -973) (973 . 976) ("ごれ" . -973) (973 . 975) ("ごｒ" . -973) (973 . 975) ("ご" . -973) (973 . 974) ("ｇ" . -973) (971 . 974) nil ("ので" . -971) (971 . 973) ("のｄ" . -971) (971 . 973) ("の" . -971) (971 . 972) ("ｎ" . -971) (971 . 972) ("で" . -971) ("す" . -972) ("。" . -973) 974 nil (973 . 974) ("。" . -973) (967 . 974) nil ("行いたいです" . -967) (967 . 973) ("おこないたいです" . -967) (967 . 975) ("おこないたいでｓ" . -967) (967 . 975) ("おこないたいで" . -967) (967 . 974) ("おこないたいｄ" . -967) (967 . 974) ("おこないたい" . -967) (967 . 973) ("おこないたいと" . -967) (967 . 974) ("おこないたいとｋ" . -967) (967 . 975) ("おこないたいと" . -967) (967 . 974) ("おこないたいｔ" . -967) (967 . 974) ("おこないたい" . -967) (967 . 973) ("おこないた" . -967) (967 . 972) ("おこないｔ" . -967) (967 . 972) ("おこない" . -967) (967 . 971) ("おこな" . -967) (967 . 970) ("おこｎ" . -967) (967 . 970) ("おこ" . -967) (967 . 969) ("おｋ" . -967) (967 . 969) ("お" . -967) (967 . 968) ("開" . -967) ("始" . -968) 969 nil ("ｈ" . -969) (969 . 970) ("ふ" . -969) (969 . 970) ("ふぁ" . -969) (969 . 971) ("ｆ" . -969) (969 . 970) nil (967 . 969) ("開始" . -967) (967 . 969) ("かいし" . -967) (967 . 970) ("かいｓ" . -967) (967 . 970) ("かい" . -967) (967 . 969) ("か" . -967) (967 . 968) ("ｋ" . -967) (964 . 968) ("作業を" . -964) (964 . 967) ("さぎょうを" . -964) (964 . 969) ("さぎょうｗ" . -964) (964 . 969) ("さぎょう" . -964) (964 . 968) ("さぎょ" . -964) (964 . 967) ("さｇｙ" . -964) (964 . 967) ("さｇ" . -964) (964 . 966) ("さ" . -964) (964 . 965) ("ｓ" . -964) (961 . 965) ("曜日に" . -961) (961 . 964) ("ようびに" . -961) (961 . 965) ("ようびｎ" . -961) (961 . 965) ("ようび" . -961) (961 . 964) ("ようｂ" . -961) (961 . 964) ("よう" . -961) (961 . 963) ("よ" . -961) (961 . 962) ("ｙ" . -961) (960 . 962) nil ("金" . -960) (960 . 961) ("きん" . -960) (960 . 962) ("きｎ" . -960) (960 . 962) ("き" . -960) (960 . 961) ("ｋ" . -960) (960 . 961) ("き" . -960) ("ん" . -961) ("よ" . -962) ("う" . -963) 964 nil (960 . 964) nil ("きんよう" . -960) (960 . 964) ("きんよ" . -960) (960 . 963) ("きんｙ" . -960) (960 . 963) ("きん" . -960) (960 . 962) ("きｎ" . -960) (960 . 962) ("き" . -960) (960 . 961) ("ｋ" . -960) 961 nil (960 . 961) ("、" . -960) 961 nil (960 . 961) ("、" . -960) (957 . 961) nil ("木曜日" . -957) (957 . 960) ("もくようび" . -957) (957 . 962) ("もくようｂ" . -957) (957 . 962) ("もくよう" . -957) (957 . 961) ("もくよ" . -957) (957 . 960) ("もくよｂ" . -957) (957 . 961) ("もくよ" . -957) (957 . 960) ("もくｙ" . -957) (957 . 960) ("もく" . -957) (957 . 959) ("もｋ" . -957) (957 . 959) ("も" . -957) (957 . 958) ("ｍ" . -957) (956 . 958) nil (955 . 956) ("。" . -955) (954 . 956) nil ("す" . -954) (954 . 955) ("ｓ" . -954) (954 . 955) ("s" . -954) ("う" . -955) 956 nil (955 . 956) ("う" . -955) (949 . 956) nil ("う" . -949) (949 . 950) ("おつかれさまでｓ" . -949) (949 . 957) ("おつかれさまで" . -949) (949 . 956) ("おつかれさまｄ" . -949) (949 . 956) ("おつかれさま" . -949) (949 . 955) ("おつかれさｍ" . -949) (949 . 955) ("おつかれさ" . -949) (949 . 954) ("おつかれｓ" . -949) (949 . 954) ("おつかれ" . -949) (949 . 953) ("おつかｒ" . -949) (949 . 953) ("おつか" . -949) (949 . 952) ("おつかさ" . -949) (949 . 953) ("おつかｓ" . -949) (949 . 953) ("おつか" . -949) (949 . 952) ("おつｋ" . -949) (949 . 952) ("おつ" . -949) (949 . 951) ("おｔ" . -949) (949 . 951) ("お" . -949) (948 . 950) (t 23299 16288 653095 216000) nil (142 . 151) nil ("13." . -142) 145 nil ("115." . -145) 149 nil ("255." . -149) 153 nil ("215" . -153) 156 (t 23299 16278 984541 796000) nil (277 . 278) (t 23299 16275 407544 922000) nil ("
" . 569) (t 23299 16273 306842 991000) nil ("
" . -463) 464 nil ("                // HTTPレスポンスヘッダを出力する" . 464) nil ("
" . -606) 607 nil ("                // HTTPレスポンスボディを出力する" . 607) (t 23299 16267 464801 433000) nil ("
" . -855) 856 (t 23299 16265 977847 628000) nil ("        // URLが「http://localhost:8080/result」の場合、\"resultGenerator\"の処理を行う" . 856) nil ("
" . -768) 769 nil ("        // URLが「http://localhost:8080/」の場合、\"renderHTML\"の処理を行う" . 769) (t 23299 11539 273015 383000) nil (175 . 176) nil (172 . 175) nil ("8" . -172) ("0" . -173) 174 nil (1070 . 1074) nil ("p" . -1070) 1071 nil (1070 . 1071) nil ("8080" . -1070) 1074 (t 23299 11509 591811 724000) nil ("
" . -674) 675 nil ("                
" . 675) nil ("res.end(\"HTML file has already sent to browser\");" . -691) 740 (t 23299 11413 272719 952000) nil (93 . 95) nil ("url" . -93) 96 nil (79 . 81) nil ("ur" . -79) 81 nil ("l" . -81) 82 nil (100 . 101) nil (73 . 100) nil (72 . 73) (t 23299 11375 714057 449000) nil (66 . 69) nil ("http" . -66) 70 nil (52 . 54) nil ("r" . -52) 53 nil (51 . 53) nil ("http" . -51) 55 nil (nil rear-nonsticky nil 73 . 74) (45 . 74) nil ("/" . -45) ("/" . -46) (" " . -47) 48 nil (45 . 48) nil (44 . 45) (t 23299 11349 417962 705000) nil (1082 . 1086) nil ("6" . -1082) ("6" . -1083) ("7" . -1084) ("7" . -1085) 1086 (t 23299 11245 529959 852000) nil (1087 . 1098) nil (1086 . 1087) (t 23299 11173 148258 482000) nil (1090 . 1093) nil ("commentn" . -1090) 1098 (t 23299 11059 719148 656000) nil (" " . 1090) nil ("/" . 1090) ("/" . 1090) (apply yas--snippet-revive 1090 1100 [cl-struct-yas--snippet nil ([cl-struct-yas--field 1 (1093 marker) (1100 marker) nil nil nil nil [cl-struct-yas--exit (1100 marker) nil]]) [cl-struct-yas--exit (1100 marker) nil] 0 (overlay nil nil) [cl-struct-yas--field 1 (1093 marker) (1100 marker) nil nil nil nil [cl-struct-yas--exit (1100 marker) nil]] nil nil]) nil (apply yas--take-care-of-redo 1096 1100 [cl-struct-yas--snippet nil ([cl-struct-yas--field 1 (1093 marker) (1100 marker) nil nil nil nil [cl-struct-yas--exit (1100 marker) nil]]) [cl-struct-yas--exit (1100 marker) nil] 0 (overlay nil nil) [cl-struct-yas--field 1 (1093 marker) (1100 marker) nil nil nil nil [cl-struct-yas--exit (1100 marker) nil]] nil nil]) (1090 . 1100) ("      " . 1090) ("co" . 1096) 1098 nil ("
" . -1088) 1089 nil ("
" . -1089) ("
" . -1090) 1091 nil ("http.createServer(function (req, res) {

	
	
}).listen(1337, '127.0.0.1');" . -1091) 1165 (t 23299 11050 57380 406000) nil ("
" . -1062) 1063 nil ("	res.writeHead(200, {'Content-Type': 'text/plain'});
	res.end('Hello Hosomichi!\\n');" . -1063) 1147 nil (262 . 1062) nil (260 . 262) nil ("var Response = {
        \"renderHTML\": function () {
            var template = fs.readFile('./html/index.html', 'utf-8', function (err, data) {
                // HTTPレスポンスヘッダを出力する
                res.writeHead(200, {
                    'content-Type': 'text/html'
                });

                // HTTPレスポンスボディを出力する
                res.write(data);
                res.end(\"HTML file has already sent to browser\");

            });
        }
	};

	var uri = url.parse(req.url).pathname;

	if (uri === \"/\") {
        // URLが「http://localhost:8080/」の場合、\"renderHTML\"の処理を行う
        Response[\"renderHTML\"](); 
        return;
    } else if (uri === \"/result\") {
        // URLが「http://localhost:8080/result」の場合、\"resultGenerator\"の処理を行う
        Response[\"resultGenerator\"]();
        return;
    };" . 416) 1216 (t 23299 11030 435240 171000) nil (511 . 515) nil ("template" . -511) 519 (t 23299 11016 844168 748000) nil ("
" . 861) (t 23299 11010 860490 312000) nil ("
" . -871) ("        \"resultGenerator\": function () {
            var template = fs.readFile('./template/result.html', 'utf-8', function (err, data) {
                // HTTPレスポンスヘッダを出力する
                res.writeHead(200, {
                    'content-Type': 'text/html'
                });

                // HTTPレスポンスボディを出力する
                res.write(data);
                res.end(\"HTML file has already sent to browser\");
			})
		}" . -872) 1298 nil ("," . -871) 872 nil (1649 . 1651) nil ("	" . -1650) nil ("
" . 1650) nil ("
" . 1650) nil ("		if(req.url === '/secret/'){
			if (!credential || credential.name !== accept_user || credential.pass !== accept_pass) {
				const error_template = fs.readFileSync(\"./html/auth_failed.ejs\", \"utf-8\");
				var html = ejs.render(error_template,
									  {HOSTNAME:   HOSTNAME,
									   PORT: PORT,});
				res.writeHead(401, {\"Content-type\": \"text/html\"});
				res.write(html);
				res.end();
			} else {
				res.end('SUCCESS\\n')
			}
		}" . -1651) 2091 nil (1347 . 1649) nil (1346 . 1347) ("	" . 1345) (1345 . 1346) (1345 . 1346) ("	" . 1345) 1346 nil (1344 . 1346) nil ("
" . 1344) nil ("    " . -1306) 1305 nil (1306 . 1349) nil (1305 . 1306) ("	" . 1304) (1304 . 1305) (1304 . 1305) ("	" . 1304) 1305 nil (1303 . 1305) nil (1302 . 1303) ("	" . -1301) (1302 . 1303) ("}" . -1302) (1302 . 1303) nil (1299 . 1302) nil (1774 . 1780) (1742 . 1743) (1739 . 1740) (1733 . 1736) ("        " . 1733) (1708 . 1712) ("            " . 1708) (1696 . 1699) ("        " . 1696) (1681 . 1685) ("            " . 1681) (1660 . 1664) ("            " . 1660) (1605 . 1609) ("            " . 1605) (1586 . 1590) ("   " . 1586) (1552 . 1555) ("  " . 1552) (1502 . 1506) ("            " . 1502) (1423 . 1427) ("            " . 1423) (1331 . 1334) ("        " . 1331) (1302 . 1303) (1296 . 1298) ("    " . 1296) (1290 . 1293) ("        " . 1290) ("    " . -416) 1 nil (416 . 1310) nil (415 . 416) ("	" . 414) (414 . 415) (414 . 415) ("	" . 414) 415 nil (413 . 415) ("	" . 413) 414 (t 23299 10763 982512 954000) nil ("
" . -413) ("	" . -414) ("
" . -415) 416 (t 23299 9309 213536 236000) nil (262 . 345) nil ("res.writeHead(200, {'Content-Type': 'text/plain'});
	res.end('Hello Hosomichi!\\n');" . 334) 417 nil ("console.log(\"リクエストがあったよ\");" . 262) nil (261 . 262) ("   " . 261) nil (296 . 316) nil (294 . 296) nil ("
" . -220) 221 nil ("server.on" . 221) nil (231 . 305) nil (230 . 231) nil (227 . 230) nil (221 . 227) ("se" . -221) 223 nil (221 . 223) nil (219 . 221) nil (186 . 219) nil (184 . 186) (t 23299 9069 22954 848000) nil (610 . 621) ("                 " . 610) (577 . 587) ("                " . 577) 1 nil ("	" . -824) (825 . 826) ("}" . -825) (825 . 826) nil (822 . 825) nil (577 . 593) ("								  " . 577) (610 . 627) ("								   " . 610) ("	" . 811) ("				  " . 843) nil (843 . 849) (811 . 812) (610 . 621) ("                 " . 610) (577 . 587) ("                " . 577) 1 nil ("x" . -853) 854 nil (853 . 854) nil (nil rear-nonsticky nil 821 . 822) (315 . 822) nil (314 . 315) ("	" . 313) (313 . 314) (313 . 314) ("	" . 313) 314 nil (312 . 314) nil (225 . 227) nil (122 . 184) nil (120 . 122) nil ("									  " . -247) ("								   " . -216) 1 nil ("								   " . -163) 162 nil ("x" . -161) 162 nil (270 . 281) (227 . 239) ("  " . 227) (163 . 175) ("  " . 163) 1 nil (161 . 162) (t 23299 8618 660891 172000) nil ("
" . -278) ("
" . -279) 280 nil ("const server = http.createServer((req, res) => {
	
    res.writeHead(200, { 'Content-Type': 'text/plain', 'charset':
        'utf-8' }); res.write('AMAZON\\n'); res.end(); });" . -280) 454 (t 23299 8615 370953 378000) nil (122 . 278) nil (120 . 122) (t 23298 64750 716122 436000) nil (120 . 121) (t 23298 64131 168868 611000) nil (366 . 367) nil (169 . 171) nil ("
" . 170) nil ("
" . 295) nil (135 . 136) nil ("
" . 135) nil (120 . 121) nil (" " . -120) 121 nil (103 . 104) nil (" " . -103) 104 nil ("
" . -68) 69 nil (68 . 69) nil (44 . 45) nil (" " . -44) 45 nil (14 . 15) nil (" " . -14) 15 nil (nil rear-nonsticky nil 365 . 366) (1 . 366) (t . -1)))
