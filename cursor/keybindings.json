// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+z",
    "command": "undo",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "-undo",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+z",
    "command": "-redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+x [",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+up",
    "command": "-cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+x ]",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+down",
    "command": "-cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "cmd+.",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "cmd+,",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "cmd+,",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+,",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+.",
    "command": "cursorRedo"
  },
  {
    "key": "ctrl+t -",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+x 2",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+t j",
    "command": "workbench.action.navigateDown",
  },
  {
    "key": "ctrl+t k",
    "command": "workbench.action.navigateUp",
  },
  {
    "key": "ctrl+t h",
    "command": "workbench.action.navigateLeft",
  },
  {
    "key": "ctrl+t l",
    "command": "workbench.action.navigateRight",
  },
  {
    "key": "ctrl+x j",
    "command": "extension.openJunkfile"
  },
  {
    "key": "ctrl+cmd+space",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "ctrl+x ctrl+x",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "ctrl+alt+space",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "!config.emacs-mcx.useMetaPrefixMacCmd"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "escape ctrl+space",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "config.emacs-mcx.useMetaPrefixEscape"
  },
  {
    "key": "ctrl+x ctrl+r",
    "command": "workbench.action.quickOpen",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+x ctrl+f",
    "command": "-workbench.action.quickOpen",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+x ctrl+f",
    "command": "workbench.explorer.fileView.focus"
  },
  // ディレクトリはEnterで開く
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus && explorerResourceIsFolder"
  },
  // C-oするとFiles Explorerにフォーカスしたままファイルを開く
  {
    "key": "ctrl+o",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  // Files Explorerのディレクトリにフォーカスした状態でC-x C-fするとNew Fileする
  {
    "key": "ctrl+x ctrl+f",
    "command": "explorer.newFile",
    "when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus && explorerResourceIsFolder"
  },
  // Enterにrenameが割り当てられていると、Enterでファイルを開けないのでRenameのキーバインドから外す
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "cmd+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "alt+escape",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+t shift+\\",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+'",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+'",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+'",
    "command": "-editor.action.triggerSuggest",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+'",
    "command": "-toggleSuggestionDetails",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "ctrl+shift+n",
    "command": "cursorColumnSelectDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+p",
    "command": "cursorColumnSelectUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+f",
    "command": "cursorColumnSelectRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "cursorColumnSelectLeft",
    "when": "textInputFocus"
  },
  {
    "key": "cmd+j",
    "command": "extension.jumpy-word"
  },
  {
    "key": "Escape",
    "command": "extension.jumpy-exit",
    "when": "editorTextFocus && jumpy.isJumpyMode"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+g",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+f",
    "command": "list.expand",
    "when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "list.collapse",
    "when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus",
    "args": {
      "text": "\u001b\u007f"
    }
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "shift+cmd+o",
    "command": "revealFileInOS"
  },
  {
    "key": "alt+cmd+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "shift+cmd+o",
    "command": "-editor.action.accessibleViewGoToSymbol",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "key": "shift+cmd+o",
    "command": "-workbench.action.gotoSymbol"
  },
  {
    "key": "alt+.",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+g",
    "command": "extension.jumpy-exit",
    "when": "editorTextFocus && jumpy.isJumpyMode"
  },
  {
    "key": "alt+2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  }
]